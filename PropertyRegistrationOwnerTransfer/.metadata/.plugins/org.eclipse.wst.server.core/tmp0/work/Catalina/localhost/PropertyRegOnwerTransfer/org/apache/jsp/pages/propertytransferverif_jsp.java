/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2022-07-15 04:26:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.model.ShareRequestDocModel;
import com.model.SignRequestModel;
import com.model.DocumentModel;
import java.util.List;
import com.model.UserModel;
import com.database.ConnectionManager;

public final class propertytransferverif_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.model.DocumentModel");
    _jspx_imports_classes.add("com.model.SignRequestModel");
    _jspx_imports_classes.add("com.model.UserModel");
    _jspx_imports_classes.add("com.database.ConnectionManager");
    _jspx_imports_classes.add("com.model.ShareRequestDocModel");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=utf-8 />\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/inc.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/menu.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t<div class=\"main-panel\">\r\n");
      out.write("\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t\t\t<h4 class=\"page-title\">Registrar Property Transfer Verification</h4>\r\n");
      out.write("\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"card-title\">Pending For Verification</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-body \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"table-full-width\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<tr style=\"text-align: center\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Sr.No.</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Property</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Prev.Owner</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>New.Owner</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Property ID</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Survey No.</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Reg.Date</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Address</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Sign/Reject</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th>Action</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");

													List list = ConnectionManager.getTransfReqList();
												int i = 0;
													for (i = 0; i < list.size(); i++) {
														SignRequestModel sm = (SignRequestModel) list.get(i);
														DocumentModel dm = ConnectionManager.getOriginalFileName(sm.getDid());
												
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print( i+1 );
      out.write(".</td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<td><a style=\"cursor: pointer\" href=\"");
      out.print(request.getContextPath());
      out.write("/pages/transferdetails.jsp?propid=");
      out.print( sm.getPropid());
      out.write("&preowneradhar=");
      out.print(sm.getPreowneradhar());
      out.write("&newowneradhar=");
      out.print(sm.getNewowneradhar());
      out.write('"');
      out.write('>');
      out.print(dm.getProptype());
      out.write("</a> </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"text-align: center\">");
      out.print(sm.getPreownername());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
      out.print(sm.getPreowneradhar() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"text-align: center\">");
      out.print(sm.getNewownername());
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
      out.print(sm.getNewowneradhar() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(sm.getPropid());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(sm.getSurveyno());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t");
 String da = sm.getCurrenttimedate();
													  da = da.substring(0, da.indexOf(' '));
													
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(da);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td style=\"text-align: center\">");
      out.print(sm.getPropaddrs());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<td class=\"td-actions text-left\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class=\"btn btn-primary dropdown-toggle\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"la  la-arrow-circle-down\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle=\"font-size: 20px;\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ul class=\"dropdown-menu\" role=\"menu\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-labelledby=\"dropdownMenu\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<a class=\"dropdown-item\" href=\"javascript:fnViewDoc('");
      out.print(sm.getDid() );
      out.write("')\"><i\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"la la-folder-open-o\" style=\"font-size: 15px;\"></i>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPreview</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t");

													}
												
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- Modal -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/footerinc.jsp", out, false);
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function fnShowValue(a,b){\t\r\n");
      out.write("// \talert(b);\r\n");
      out.write("\tdocument.getElementById('docid').value=a;\r\n");
      out.write("\t\r\n");
      out.write("\tdocument.getElementById('docname').innerHTML='Document Name : '+b;\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#modalUpdate1\").modal(\"show\");\r\n");
      out.write("}\r\n");
      out.write("function fnSignFile(a,b){\t\r\n");
      out.write("// \talert(b);\r\n");
      out.write("\tdocument.getElementById('signdocid').value=a;\r\n");
      out.write("\t\r\n");
      out.write("\tdocument.getElementById('signdocname').innerHTML='Document Name : '+b;\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#modalUpdatesignin\").modal(\"show\");\r\n");
      out.write("}\r\n");
      out.write("//function fnViewDoc(a){\t\r\n");
      out.write("// \talert(b);\r\n");
      out.write("// \tdocument.getElementById('docid').value=a;\r\n");
      out.write("\t\r\n");
      out.write("// \tdocument.getElementById('docname').innerHTML='Document Name : '+b;\r\n");
      out.write("//\t$(\"#\"+a).modal(\"show\");\r\n");
      out.write("//}\r\n");
      out.write("\r\n");
      out.write("function fnViewDoc(did){\t\r\n");
      out.write("// \talert(b);\r\n");
      out.write("// \tdocument.getElementById('docid').value=a;\r\n");
      out.write("\t\r\n");
      out.write("// \tdocument.getElementById('docname').innerHTML='Document Name : '+b;\r\n");
      out.write("\t//$(\"#\"+a).modal(\"show\");\r\n");
      out.write("\t\ts='';\r\n");
      out.write("params = 'scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=1000,height=700';\r\n");
      out.write("s2=\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=viewTransferFile&fid=\"+did+\"&inline=1\";\r\n");
      out.write("\twindow.open(s2, 'My PDF', params);\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("function fnRequestSign(){\t\r\n");
      out.write("var str = $(\"#requestsign\" ).serialize();\r\n");
      out.write("\r\n");
      out.write("$.post(\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=requestsign\",\r\n");
      out.write("\t\tstr, function(data) {\r\n");
      out.write("\t\t\tdata = $.trim(data);\r\n");
      out.write("\t\t\talert(data);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\twindow.location.href=\"");
      out.print(request.getContextPath());
      out.write("/pages/dashboard.jsp\";\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#myform')[0].reset();\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function fnRejectFile(did){\r\n");
      out.write("\t\r\n");
      out.write("\tif(confirm('Are You Sure Want to Reject This Property?')){\r\n");
      out.write("\t\tvar str = \"did=\" + did;\r\n");
      out.write("\t$.post(\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=rejectFile\",\r\n");
      out.write("\t\t\tstr, function(data) {\r\n");
      out.write("\t\t\t\tdata = $.trim(data);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif(data == \"1\"){\r\n");
      out.write("\t\t\t\t\talert(\"Property Rejected Successfully!\");\r\n");
      out.write("\t\t\t\t\twindow.location.href=\"");
      out.print(request.getContextPath());
      out.write("/pages/propertyverification.jsp\";\r\n");
      out.write("\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\talert(\"Error Rejecting Property\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
