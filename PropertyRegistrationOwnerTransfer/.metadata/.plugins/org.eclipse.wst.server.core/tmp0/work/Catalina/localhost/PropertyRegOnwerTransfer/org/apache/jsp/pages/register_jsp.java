/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2022-08-03 14:28:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.constant.ServerConstants;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.constant.ServerConstants");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/inc.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body\r\n");
      out.write("\tstyle=\"background: url(../tiles/back1.jpg); background-repeat: round;\">\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"\" align=\"center\"\r\n");
      out.write("\t\tstyle=\"margin-top: 50px; margin-bottom: 50px;\">\r\n");
      out.write("\t\t<div style=\"background-color: #00000080;\" class=\"col-8\">\r\n");
      out.write("\t\t<h2 style=\"color: white; font-family: arial;\">");
      out.print(ServerConstants.PROJECT_NAME );
      out.write("</h2>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-md-8\">\r\n");
      out.write("\t\t\t<div class=\"card\">\r\n");
      out.write("\t\t\t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t\t\t<div class=\"card-title\">Registration page</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t\t<form method=\"post\" enctype=\"multipart/form-data\"\r\n");
      out.write("\t\t\t\t\t\taction=\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=registerNewUser\"\r\n");
      out.write("\t\t\t\t\t\tname=\"myform\" id=\"myform\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group has-success\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"successInput\">Register Email</label><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"successInput\" name=\"emailid\" required\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"email\" class=\"form-control\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group has-success\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"successInput\">Register Password</label><br> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"successInput\" name=\"pass\" required\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"password\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group has-success\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"successInput\">Register Mobile</label><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"successInput\" name=\"mobile\" required\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"mobile no\" class=\"form-control\" pattern=\"[789][0-9]{9}\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group has-success\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"successInput\">Full Name</label><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"successInput\" name=\"fname\" required\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"full Name\" class=\"form-control\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-6\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group has-success\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"successInput\">PAN No.</label><br> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype=\"text\" id=\"successInput\" name=\"panno\" required\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"PAN card Number\" class=\"form-control\" pattern=\"[A-Z]{5}[0-9]{4}[A-Z]{1}\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group has-success\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"successInput\">Aadhaar No</label><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<input type=\"text\" id=\"successInput\" name=\"adharno\" required\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tpattern=\"[0-9]{12}\" placeholder=\"12 Digit Aadhaar no\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tclass=\"form-control\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"form-group has-success\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<label for=\"successInput\">Photo</label><br> <input\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\ttype=\"file\" name=\"file\" class=\"form-control\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tplaceholder=\"Add Image\" required>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- \t\t\t\t\t\t<input accept=\"image/*\" required=\"required\" type=\"image\" name=\"image\" placeholder=\"Add Image\" class=\"form-group has-success\"> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-action\" align=\"left\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-submit btn-success\">Register\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tUser</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"reset\" class=\"btn btn-danger\">Reset</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<br> <a\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("/pages/login.jsp\">Already\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tuser login here..!!</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function fnSubmit(){\t\r\n");
      out.write("\tvar str = $(\"#myform\" ).serialize();\r\n");
      out.write("\t$.post(\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=registerNewUser\",\r\n");
      out.write("\t\t\t\t\t\t\tstr, function(data) {\r\n");
      out.write("\t\t\t\t\t\t\t\tdata = $.trim(data);\r\n");
      out.write("\t\t\t\t\t\t\t\talert(data);\r\n");
      out.write("\t\t\t\t\t\t\t\t// \t\t\t\t\t\t\t$('#myform')[0].reset();\r\n");
      out.write("\t\t\t\t\t\t\t});\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/footerinc.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
